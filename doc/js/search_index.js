var search_data = {"index":{"searchIndex":["rack","rubyprof","rubyprof","abstractprinter","callinfoprinter","callstackprinter","calltree","calltreeprinter","calltreevisitor","cmd","dotprinter","flatprinter","graphhtmlprinter","graphprinter","measurement","methodinfo","multiprinter","profile","profiletask","thread","<=>()","<=>()","==()","call()","call_info_report()","called()","called()","calltree_name()","children_time()","children_time()","children_time()","clean_output_directory()","convert()","create_link()","create_output_directory()","define()","determine_event_specification_and_value_scale()","dot_report()","eql?()","exclude_common_methods!()","exclude_methods!()","exclude_singleton_methods!()","exclude_threads()","exclude_threads=()","file()","file_link()","file_name_for_thread()","file_path_for_thread()","filter_by()","flat_report()","full_name()","graph_html_report()","graph_report()","inspect()","max_percent()","measure_mode()","measure_mode=()","measure_mode_string()","merge!()","method_href()","min_percent()","needs_dir?()","needs_dir?()","new()","new()","new()","new()","new()","new()","output_directory()","path()","pause()","print()","print()","print()","print()","print()","print()","print_headers()","print_method()","print_thread()","print_threads()","print_to_call_info()","print_to_dot()","print_to_flat()","print_to_graph()","print_to_graph_html()","print_to_stack()","print_to_tree()","profile()","remove_subsidiary_files_from_previous_profile_runs()","resume()","run_script()","running?()","self_time()","self_time()","setup_options()","sort_method()","sort_method()","stack_report()","start()","stop()","template()","time_format()","to_s()","to_s()","total_time()","total_time()","total_time()","tree_report()","validate_print_params()","validate_print_params()","visit()","wait_time()","wait_time()","wait_time()","license","readme"],"longSearchIndex":["rack","rack::rubyprof","rubyprof","rubyprof::abstractprinter","rubyprof::callinfoprinter","rubyprof::callstackprinter","rubyprof::calltree","rubyprof::calltreeprinter","rubyprof::calltreevisitor","rubyprof::cmd","rubyprof::dotprinter","rubyprof::flatprinter","rubyprof::graphhtmlprinter","rubyprof::graphprinter","rubyprof::measurement","rubyprof::methodinfo","rubyprof::multiprinter","rubyprof::profile","rubyprof::profiletask","rubyprof::thread","rubyprof::calltree#<=>()","rubyprof::methodinfo#<=>()","rubyprof::methodinfo#==()","rack::rubyprof#call()","rubyprof::multiprinter#call_info_report()","rubyprof::calltree#called()","rubyprof::methodinfo#called()","rubyprof::calltreeprinter#calltree_name()","rubyprof::calltree#children_time()","rubyprof::measurement#children_time()","rubyprof::methodinfo#children_time()","rubyprof::profiletask#clean_output_directory()","rubyprof::calltreeprinter#convert()","rubyprof::graphhtmlprinter#create_link()","rubyprof::profiletask#create_output_directory()","rubyprof::profiletask#define()","rubyprof::calltreeprinter#determine_event_specification_and_value_scale()","rubyprof::multiprinter#dot_report()","rubyprof::methodinfo#eql?()","rubyprof::profile#exclude_common_methods!()","rubyprof::profile#exclude_methods!()","rubyprof::profile#exclude_singleton_methods!()","rubyprof::exclude_threads()","rubyprof::exclude_threads=()","rubyprof::calltreeprinter#file()","rubyprof::graphhtmlprinter#file_link()","rubyprof::calltreeprinter#file_name_for_thread()","rubyprof::calltreeprinter#file_path_for_thread()","rubyprof::abstractprinter#filter_by()","rubyprof::multiprinter#flat_report()","rubyprof::methodinfo#full_name()","rubyprof::multiprinter#graph_html_report()","rubyprof::multiprinter#graph_report()","rubyprof::measurement#inspect()","rubyprof::abstractprinter#max_percent()","rubyprof::measure_mode()","rubyprof::measure_mode=()","rubyprof::profile#measure_mode_string()","rubyprof::profile#merge!()","rubyprof::graphhtmlprinter#method_href()","rubyprof::abstractprinter#min_percent()","rubyprof::calltreeprinter::needs_dir?()","rubyprof::multiprinter::needs_dir?()","rack::rubyprof::new()","rubyprof::abstractprinter::new()","rubyprof::calltreevisitor::new()","rubyprof::dotprinter::new()","rubyprof::multiprinter::new()","rubyprof::profiletask::new()","rubyprof::profiletask#output_directory()","rubyprof::calltreeprinter#path()","rubyprof::pause()","rubyprof::abstractprinter#print()","rubyprof::callstackprinter#print()","rubyprof::calltreeprinter#print()","rubyprof::dotprinter#print()","rubyprof::graphhtmlprinter#print()","rubyprof::multiprinter#print()","rubyprof::calltreeprinter#print_headers()","rubyprof::calltreeprinter#print_method()","rubyprof::calltreeprinter#print_thread()","rubyprof::calltreeprinter#print_threads()","rubyprof::multiprinter#print_to_call_info()","rubyprof::multiprinter#print_to_dot()","rubyprof::multiprinter#print_to_flat()","rubyprof::multiprinter#print_to_graph()","rubyprof::multiprinter#print_to_graph_html()","rubyprof::multiprinter#print_to_stack()","rubyprof::multiprinter#print_to_tree()","rubyprof::profile()","rubyprof::calltreeprinter#remove_subsidiary_files_from_previous_profile_runs()","rubyprof::resume()","rubyprof::profiletask#run_script()","rubyprof::running?()","rubyprof::calltree#self_time()","rubyprof::methodinfo#self_time()","rubyprof::graphhtmlprinter#setup_options()","rubyprof::abstractprinter#sort_method()","rubyprof::flatprinter#sort_method()","rubyprof::multiprinter#stack_report()","rubyprof::start()","rubyprof::stop()","rubyprof::graphhtmlprinter#template()","rubyprof::abstractprinter#time_format()","rubyprof::measurement#to_s()","rubyprof::methodinfo#to_s()","rubyprof::calltree#total_time()","rubyprof::methodinfo#total_time()","rubyprof::thread#total_time()","rubyprof::multiprinter#tree_report()","rubyprof::calltreeprinter#validate_print_params()","rubyprof::multiprinter#validate_print_params()","rubyprof::calltreevisitor#visit()","rubyprof::calltree#wait_time()","rubyprof::methodinfo#wait_time()","rubyprof::thread#wait_time()","",""],"info":[["Rack","","Rack.html","",""],["Rack::RubyProf","","Rack/RubyProf.html","",""],["RubyProf","","RubyProf.html","","<p>These methods are deprecated and are available for backwards compatability.\n"],["RubyProf::AbstractPrinter","","RubyProf/AbstractPrinter.html","","<p>This is the base class for all Printers. It is never used directly.\n"],["RubyProf::CallInfoPrinter","","RubyProf/CallInfoPrinter.html","","<p>Prints out the call graph based on CallTree instances. This is mainly for debugging purposes as it provides …\n"],["RubyProf::CallStackPrinter","","RubyProf/CallStackPrinter.html","","<p>Prints a HTML visualization of the call tree.\n<p>To use the printer:\n\n<pre>result = RubyProf.profile do\n  [code ...</pre>\n"],["RubyProf::CallTree","","RubyProf/CallTree.html","","<p>The CallTree class is used to track the relationships between methods. It is a helper class used by  …\n"],["RubyProf::CallTreePrinter","","RubyProf/CallTreePrinter.html","","<p>Generates profiling information in callgrind format for use by kcachegrind and similar tools.\n"],["RubyProf::CallTreeVisitor","","RubyProf/CallTreeVisitor.html","","<p>The call info visitor class does a depth-first traversal across a list of call infos. At each call_tree …\n"],["RubyProf::Cmd","","RubyProf/Cmd.html","","<p>Synopsis\n<p>Profiles a Ruby program.\n<p>Usage\n"],["RubyProf::DotPrinter","","RubyProf/DotPrinter.html","","<p>Generates a graphviz graph in dot format.\n<p>To use the dot printer:\n\n<pre>result = RubyProf.profile do\n  [code ...</pre>\n"],["RubyProf::FlatPrinter","","RubyProf/FlatPrinter.html","","<p>Generates flat profile reports as text. To use the flat printer:\n\n<pre>result = RubyProf.profile do\n  [code ...</pre>\n"],["RubyProf::GraphHtmlPrinter","","RubyProf/GraphHtmlPrinter.html","","<p>Generates graph profile reports as html. To use the graph html printer:\n\n<pre>result = RubyProf.profile do\n ...</pre>\n"],["RubyProf::GraphPrinter","","RubyProf/GraphPrinter.html","","<p>Generates graph profile reports as text. To use the graph printer:\n\n<pre>result = RubyProf.profile do\n  [code ...</pre>\n"],["RubyProf::Measurement","","RubyProf/Measurement.html","","<p>The Measurement class is a helper class used by RubyProf::MethodInfo to store information about the method. …\n"],["RubyProf::MethodInfo","","RubyProf/MethodInfo.html","","<p>The MethodInfo class is used to track information about each method that is profiled. You cannot create …\n"],["RubyProf::MultiPrinter","","RubyProf/MultiPrinter.html","","<p>Helper class to simplify printing profiles of several types from one profiling run. Currently prints …\n"],["RubyProf::Profile","","RubyProf/Profile.html","",""],["RubyProf::ProfileTask","","RubyProf/ProfileTask.html","","<p>Define a task library for profiling unit tests with ruby-prof.\n<p>All of the options provided by the Rake:TestTask …\n"],["RubyProf::Thread","","RubyProf/Thread.html","",""],["<=>","RubyProf::CallTree","RubyProf/CallTree.html#method-i-3C-3D-3E","(other)","<p>Compares two CallTree instances. The comparison is based on the CallTree#parent, CallTree#target, and …\n"],["<=>","RubyProf::MethodInfo","RubyProf/MethodInfo.html#method-i-3C-3D-3E","(other)",""],["==","RubyProf::MethodInfo","RubyProf/MethodInfo.html#method-i-3D-3D","(other)",""],["call","Rack::RubyProf","Rack/RubyProf.html#method-i-call","(env)",""],["call_info_report","RubyProf::MultiPrinter","RubyProf/MultiPrinter.html#method-i-call_info_report","()","<p>the name of the callinfo profile file\n"],["called","RubyProf::CallTree","RubyProf/CallTree.html#method-i-called","()","<p>The number of times the parent method called the target method\n"],["called","RubyProf::MethodInfo","RubyProf/MethodInfo.html#method-i-called","()","<p>The number of times this method was called\n"],["calltree_name","RubyProf::CallTreePrinter","RubyProf/CallTreePrinter.html#method-i-calltree_name","(method_info)",""],["children_time","RubyProf::CallTree","RubyProf/CallTree.html#method-i-children_time","()","<p>The time spent in child methods resulting from the parent method calling the target method\n"],["children_time","RubyProf::Measurement","RubyProf/Measurement.html#method-i-children_time","()",""],["children_time","RubyProf::MethodInfo","RubyProf/MethodInfo.html#method-i-children_time","()","<p>The time this method’s children took to execute\n"],["clean_output_directory","RubyProf::ProfileTask","RubyProf/ProfileTask.html#method-i-clean_output_directory","()",""],["convert","RubyProf::CallTreePrinter","RubyProf/CallTreePrinter.html#method-i-convert","(value)",""],["create_link","RubyProf::GraphHtmlPrinter","RubyProf/GraphHtmlPrinter.html#method-i-create_link","(thread, overall_time, method)","<p>Creates a link to a method.  Note that we do not create links to methods which are under the min_percent …\n"],["create_output_directory","RubyProf::ProfileTask","RubyProf/ProfileTask.html#method-i-create_output_directory","()",""],["define","RubyProf::ProfileTask","RubyProf/ProfileTask.html#method-i-define","()","<p>Create the tasks defined by this task lib.\n"],["determine_event_specification_and_value_scale","RubyProf::CallTreePrinter","RubyProf/CallTreePrinter.html#method-i-determine_event_specification_and_value_scale","()",""],["dot_report","RubyProf::MultiPrinter","RubyProf/MultiPrinter.html#method-i-dot_report","()","<p>the name of the call stack profile file\n"],["eql?","RubyProf::MethodInfo","RubyProf/MethodInfo.html#method-i-eql-3F","(other)",""],["exclude_common_methods!","RubyProf::Profile","RubyProf/Profile.html#method-i-exclude_common_methods-21","()","<p>Hides methods that, when represented as a call graph, have extremely large in and out degrees and make …\n"],["exclude_methods!","RubyProf::Profile","RubyProf/Profile.html#method-i-exclude_methods-21","(mod, *method_or_methods)",""],["exclude_singleton_methods!","RubyProf::Profile","RubyProf/Profile.html#method-i-exclude_singleton_methods-21","(mod, *method_or_methods)",""],["exclude_threads","RubyProf","RubyProf.html#method-c-exclude_threads","()","<p>Returns the threads that ruby-prof should exclude from profiling\n"],["exclude_threads=","RubyProf","RubyProf.html#method-c-exclude_threads-3D","(value)","<p>Specifies which threads ruby-prof should exclude from profiling\n"],["file","RubyProf::CallTreePrinter","RubyProf/CallTreePrinter.html#method-i-file","(method)",""],["file_link","RubyProf::GraphHtmlPrinter","RubyProf/GraphHtmlPrinter.html#method-i-file_link","(path, linenum)",""],["file_name_for_thread","RubyProf::CallTreePrinter","RubyProf/CallTreePrinter.html#method-i-file_name_for_thread","(thread)",""],["file_path_for_thread","RubyProf::CallTreePrinter","RubyProf/CallTreePrinter.html#method-i-file_path_for_thread","(thread)",""],["filter_by","RubyProf::AbstractPrinter","RubyProf/AbstractPrinter.html#method-i-filter_by","()","<p>Returns the method to filter methods by (when using min_percent and max_percent)\n"],["flat_report","RubyProf::MultiPrinter","RubyProf/MultiPrinter.html#method-i-flat_report","()","<p>the name of the flat profile file\n"],["full_name","RubyProf::MethodInfo","RubyProf/MethodInfo.html#method-i-full_name","()","<p>Returns the full name of a class. The interpretation of method names is:\n<p>MyObject#test - An method defined …\n"],["graph_html_report","RubyProf::MultiPrinter","RubyProf/MultiPrinter.html#method-i-graph_html_report","()",""],["graph_report","RubyProf::MultiPrinter","RubyProf/MultiPrinter.html#method-i-graph_report","()","<p>the name of the graph profile file\n"],["inspect","RubyProf::Measurement","RubyProf/Measurement.html#method-i-inspect","()",""],["max_percent","RubyProf::AbstractPrinter","RubyProf/AbstractPrinter.html#method-i-max_percent","()","<p>Returns the max_percent of time a method can take to be included in a profiling report\n"],["measure_mode","RubyProf","RubyProf.html#method-c-measure_mode","()","<p>Returns what ruby-prof is measuring.  Valid values include:\n<p>RubyProf::WALL_TIME\n<p>RubyProf::PROCESS_TIME …\n"],["measure_mode=","RubyProf","RubyProf.html#method-c-measure_mode-3D","(value)","<p>Specifies what ruby-prof should measure.  Valid values include:\n<p>RubyProf::WALL_TIME - Wall time measures …\n"],["measure_mode_string","RubyProf::Profile","RubyProf/Profile.html#method-i-measure_mode_string","()",""],["merge!","RubyProf::Profile","RubyProf/Profile.html#method-i-merge-21","()","<p>Merges RubyProf threads whose root call_trees reference the same target method. This is useful when profiling …\n"],["method_href","RubyProf::GraphHtmlPrinter","RubyProf/GraphHtmlPrinter.html#method-i-method_href","(thread, method)",""],["min_percent","RubyProf::AbstractPrinter","RubyProf/AbstractPrinter.html#method-i-min_percent","()","<p>Returns the min_percent of time a method must take to be included in a profiling report\n"],["needs_dir?","RubyProf::CallTreePrinter","RubyProf/CallTreePrinter.html#method-c-needs_dir-3F","()",""],["needs_dir?","RubyProf::MultiPrinter","RubyProf/MultiPrinter.html#method-c-needs_dir-3F","()",""],["new","Rack::RubyProf","Rack/RubyProf.html#method-c-new","(app, options = {})",""],["new","RubyProf::AbstractPrinter","RubyProf/AbstractPrinter.html#method-c-new","(result)","<p>Create a new printer.\n<p>result should be the output generated from a profiling run\n"],["new","RubyProf::CallTreeVisitor","RubyProf/CallTreeVisitor.html#method-c-new","(call_tree)",""],["new","RubyProf::DotPrinter","RubyProf/DotPrinter.html#method-c-new","(result)","<p>Creates the DotPrinter using a RubyProf::Proile.\n"],["new","RubyProf::MultiPrinter","RubyProf/MultiPrinter.html#method-c-new","(result, printers = [:flat, :graph_html])",""],["new","RubyProf::ProfileTask","RubyProf/ProfileTask.html#method-c-new","(name = :profile)",""],["output_directory","RubyProf::ProfileTask","RubyProf/ProfileTask.html#method-i-output_directory","()",""],["path","RubyProf::CallTreePrinter","RubyProf/CallTreePrinter.html#method-i-path","()",""],["pause","RubyProf","RubyProf.html#method-c-pause","()","<p>Pauses profiling\n"],["print","RubyProf::AbstractPrinter","RubyProf/AbstractPrinter.html#method-i-print","(output = STDOUT, options = {})","<p>Prints a report to the provided output.\n<p>output - Any IO object, including STDOUT or a file. The default …\n"],["print","RubyProf::CallStackPrinter","RubyProf/CallStackPrinter.html#method-i-print","(output = STDOUT, options = {})","<p>Specify print options.\n<p>options - Hash table\n\n<pre>:min_percent - Number 0 to 100 that specifes the minimum\n  ...</pre>\n"],["print","RubyProf::CallTreePrinter","RubyProf/CallTreePrinter.html#method-i-print","(options = {})",""],["print","RubyProf::DotPrinter","RubyProf/DotPrinter.html#method-i-print","(output = STDOUT, options = {})","<p>Print a graph report to the provided output.\n<p>output - Any IO object, including STDOUT or a file. The default …\n"],["print","RubyProf::GraphHtmlPrinter","RubyProf/GraphHtmlPrinter.html#method-i-print","(output = STDOUT, options = {})",""],["print","RubyProf::MultiPrinter","RubyProf/MultiPrinter.html#method-i-print","(options)","<p>create profile files under options or the current directory. options is used as the base name for the …\n"],["print_headers","RubyProf::CallTreePrinter","RubyProf/CallTreePrinter.html#method-i-print_headers","(output, thread)",""],["print_method","RubyProf::CallTreePrinter","RubyProf/CallTreePrinter.html#method-i-print_method","(output, method)",""],["print_thread","RubyProf::CallTreePrinter","RubyProf/CallTreePrinter.html#method-i-print_thread","(thread)",""],["print_threads","RubyProf::CallTreePrinter","RubyProf/CallTreePrinter.html#method-i-print_threads","()",""],["print_to_call_info","RubyProf::MultiPrinter","RubyProf/MultiPrinter.html#method-i-print_to_call_info","(options)",""],["print_to_dot","RubyProf::MultiPrinter","RubyProf/MultiPrinter.html#method-i-print_to_dot","(options)",""],["print_to_flat","RubyProf::MultiPrinter","RubyProf/MultiPrinter.html#method-i-print_to_flat","(options)",""],["print_to_graph","RubyProf::MultiPrinter","RubyProf/MultiPrinter.html#method-i-print_to_graph","(options)",""],["print_to_graph_html","RubyProf::MultiPrinter","RubyProf/MultiPrinter.html#method-i-print_to_graph_html","(options)",""],["print_to_stack","RubyProf::MultiPrinter","RubyProf/MultiPrinter.html#method-i-print_to_stack","(options)",""],["print_to_tree","RubyProf::MultiPrinter","RubyProf/MultiPrinter.html#method-i-print_to_tree","(options)",""],["profile","RubyProf","RubyProf.html#method-c-profile","(options = {}, &block)","<p>Profiles a block\n"],["remove_subsidiary_files_from_previous_profile_runs","RubyProf::CallTreePrinter","RubyProf/CallTreePrinter.html#method-i-remove_subsidiary_files_from_previous_profile_runs","()",""],["resume","RubyProf","RubyProf.html#method-c-resume","()","<p>Resume profiling\n"],["run_script","RubyProf::ProfileTask","RubyProf/ProfileTask.html#method-i-run_script","(script_path)","<p>Run script\n"],["running?","RubyProf","RubyProf.html#method-c-running-3F","()","<p>Is a profile running?\n"],["self_time","RubyProf::CallTree","RubyProf/CallTree.html#method-i-self_time","()","<p>The self time (of the parent) resulting from the parent method calling the target method\n"],["self_time","RubyProf::MethodInfo","RubyProf/MethodInfo.html#method-i-self_time","()","<p>The time this method took to execute\n"],["setup_options","RubyProf::GraphHtmlPrinter","RubyProf/GraphHtmlPrinter.html#method-i-setup_options","(options)",""],["sort_method","RubyProf::AbstractPrinter","RubyProf/AbstractPrinter.html#method-i-sort_method","()","<p>Returns how profile data should be sorted\n"],["sort_method","RubyProf::FlatPrinter","RubyProf/FlatPrinter.html#method-i-sort_method","()","<p>Override for this printer to sort by self time by default\n"],["stack_report","RubyProf::MultiPrinter","RubyProf/MultiPrinter.html#method-i-stack_report","()","<p>the name of the call stack profile file\n"],["start","RubyProf","RubyProf.html#method-c-start","()","<p>Starts profiling\n"],["stop","RubyProf","RubyProf.html#method-c-stop","()","<p>Stops profiling\n"],["template","RubyProf::GraphHtmlPrinter","RubyProf/GraphHtmlPrinter.html#method-i-template","()",""],["time_format","RubyProf::AbstractPrinter","RubyProf/AbstractPrinter.html#method-i-time_format","()","<p>Returns the time format used to show when a profile was run\n"],["to_s","RubyProf::Measurement","RubyProf/Measurement.html#method-i-to_s","()",""],["to_s","RubyProf::MethodInfo","RubyProf/MethodInfo.html#method-i-to_s","()",""],["total_time","RubyProf::CallTree","RubyProf/CallTree.html#method-i-total_time","()","<p>The total time resulting from the parent method calling the target method\n"],["total_time","RubyProf::MethodInfo","RubyProf/MethodInfo.html#method-i-total_time","()","<p>The total time this method took - includes self time + wait time + child time\n"],["total_time","RubyProf::Thread","RubyProf/Thread.html#method-i-total_time","()","<p>Returns the total time this thread was executed.\n"],["tree_report","RubyProf::MultiPrinter","RubyProf/MultiPrinter.html#method-i-tree_report","()","<p>the name of the callgrind profile file\n"],["validate_print_params","RubyProf::CallTreePrinter","RubyProf/CallTreePrinter.html#method-i-validate_print_params","(options)",""],["validate_print_params","RubyProf::MultiPrinter","RubyProf/MultiPrinter.html#method-i-validate_print_params","(options)",""],["visit","RubyProf::CallTreeVisitor","RubyProf/CallTreeVisitor.html#method-i-visit","(&block)",""],["wait_time","RubyProf::CallTree","RubyProf/CallTree.html#method-i-wait_time","()","<p>The wait time (of the parent) resulting from the parent method calling the target method\n"],["wait_time","RubyProf::MethodInfo","RubyProf/MethodInfo.html#method-i-wait_time","()","<p>The time this method waited for other fibers/threads to execute\n"],["wait_time","RubyProf::Thread","RubyProf/Thread.html#method-i-wait_time","()","<p>Returns the amount of time this thread waited while other thread executed.\n"],["LICENSE","","LICENSE.html","","<p>Copyright © 2005 - 2019 Shugo Maeda &lt;shugo@ruby-lang.org&gt;, Charlie Savage &lt;cfis@savagexi.com&gt; …\n"],["README","","README_md.html","","<p>ruby-prof\n<p><img src=\"https://github.com/ruby-prof/ruby-prof/workflows/ruby-prof/badge.svg\">\n<p>For an overview …\n"]]}}